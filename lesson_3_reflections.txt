When would you want to use a remote repository rather than keeping all your work local?

A remote repository would allow me to share my work with others.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

To ensure that changes made in the remote repository is synced with the local repository.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

A clone is a copy of a repository (can be local or remote). A branch occurs within a directory/repository. We usually start out with a master branch and create new branches for purposes like creating the same application in a different language or if we want to target a different audience. Forking is only available in GitHub (not Git) and involves copying someone else's public repository into my own git hub account and making any changes I deem necessary.
Useful link:
http://stackoverflow.com/questions/3329943/git-branch-fork-fetch-merge-rebase-and-clone-what-are-the-differences

What is the benefit of having a copy of the last known state of the remote stored locally?
We can compare the exact differences between the local master and the version stored on GitHub (same as local remote copy).

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

I could use other version control systems like SVN which might be easier if I already knew SVN. If we decided to manually maintain versions of files and collaborate that would be a lot harder to keep track of and merge contributions.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

It only makes sense to make changes in a separate branch when you're working on a separate feature or to experiment with the current version and you wouldn't want to break your master.